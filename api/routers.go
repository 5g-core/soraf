/*
 * Nsoraf_SOR
 *
 * Nsoraf Steering Of Roaming Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"net/http"

	"github.com/gin-gonic/gin"
	"gitlabe2.ext.net.nokia.com/5g_core/sor-af/logger"

)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name        string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method      string
	// Pattern is the pattern of the URI.
	Pattern     string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := logger.NewGinWithLogrus(logger.GinLog)
	AddService(router)

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}


func AddService(engine *gin.Engine) *gin.RouterGroup {
	group := engine.Group("/nsoraf-sor/v1")
	for _, route := range routes {
		switch route.Method {
		case "GET":
			group.GET(route.Pattern, route.HandlerFunc)
		case "PATCH":
			group.PATCH(route.Pattern, route.HandlerFunc)
		case "POST":
			group.POST(route.Pattern, route.HandlerFunc)
		case "PUT":
			group.PUT(route.Pattern, route.HandlerFunc)
		case "DELETE":
			group.DELETE(route.Pattern, route.HandlerFunc)
		}
	}
	return group
}


var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/",
		Index,
	},

	{
		"HttpPutSorInformation",
		http.MethodPost,
		"/:supi/sor-information",
		HttpPutSorInformation,
	},

	{
		"HttpSorAckInfo",
		http.MethodPut,
		"/:supi/sor-information/sor-ack",
		HttpSorAckInfo,
	},

	{
		"HttpGetSorInformation",
		http.MethodGet,
		"/:supi/sor-information",
		HttpGetSorInformation,
	},
}
